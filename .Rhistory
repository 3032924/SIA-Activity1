library(lme4)
library(simr)
library(simr)
install.packages("lme4")
install.packages("simr")
library(simr)
simdata
simdata <- simdata
simdata
simdata <- simdata
head(simdata)
View(simdata)
library(readxl)
jump <- read_excel("Desktop/Spreadsheet.xlsx")
View(jump)
str(jump)
jump$case_id <- as.factor(jump$case_id)
jump$Athlete_id <- as.factor(jump$Athlete_id)
jump$Athlete_ID <- as.factor(jump$Athlete_ID)
jump$Session_ID <- as.factor(jump$Session_ID)
jump$Rep <- as.factor(jump$Rep)
jump$Year <- as.factor(jump$Year)
jump$Sex <- as.factor(jump$Sex)
str(jump)
summary(jump)
plot(x = jump$case_id, y = jump$Absolute_Asym)
sum(is.na(jump))
library(lattice)
bwplot(Absolute_Asym ~ Sex | Year, data = jump)
bwplot(Absolute_Asym ~ Sex | Year, data = jump, layout = c(4,1))
bwplot(Absolute_Asym ~ Year | Sex, data = jump)
bwplot(Absolute_Asym ~ Rep | Sex, data = jump)
bwplot(Absolute_Asym ~ Session_ID | Sex, data = jump)
library(lme4)
citation("lme4")
mdl1 <- lmer(Absolute_Asym ~ Year + Sex + (1|Athlete_ID) + (1|Rep), data = jump, REML = FALSE)
summary(mdl1)
mdl_int <- lmer(Absolute_Asym ~ Year * Sex + (1|Athlete_ID) + (1|Rep), data = jump, REML = FALSE)
summary(mdl_int)
anova(mdl1, mdl_int)
bwplot(Absolute_Asym ~ Year | Sex, data = jump)
mdl_wout_sex <- lmer(Absolute_Asym ~ Year + (1|Athlete_ID) + (1|Rep), data = jump, REML = FALSE)
mdl_wout_Year <- lmer(Absolute_Asym ~ Sex + (1|Athlete_ID) + (1|Rep), data = jump, REML = FALSE)
anova(mdl1, mdl_wout_sex)
anova(mdl1, mdl_wout_Year)
bwplot(Absolute_Asym ~ Year | Sex, data = jump, ylab = "Absolute Asymmetry (%)", xlab = "Year")
my.age <- as.integer(readline(prompt="Please Enter your Age: "))
if (my.age < 18) {
print("You are Not a Major.")
print("You are Not Eligible to Work")
} else {
if (my.age >= 18 && my.age <= 60 )  {
print("You are Eligible to Work")
print("Please fill the Application Form and Email to us")
} else {
print("As per the Government Rules, You are too Old to Work")
print("Please Collect your pension!")
}
}
print("This Message is from Outside the Nested IF Else Statement")
my.age <- as.integer(readline(prompt="Please Enter your Age: "))
if (my.age < 18) {
print("You are Not a Major.")
print("You are Not Eligible to Work")
} else {
if (my.age >= 18 && my.age <= 60 )  {
print("You are Eligible to Work")
print("Please fill the Application Form and Email to us")
} else {
print("As per the Government Rules, You are too Old to Work")
print("Please Collect your pension!")
}
}
print("This Message is from Outside the Nested IF Else Statement")
load("~/OneDrive/Documents/Work/Teaching/2018/Applied Data Analysis in Sport/Assessment/Activity 2/2018-Sem2/Activity 2 Workspace.RData")
View(nhl)
install.packages("Rmisc")
library(Rmisc)
CI(nhl$goalprob, ci = 0.95)
wins <- nhl[nhl$WL == "W",]
loss <- nhl[nhl$WL == "L",]
CI(wins$goalprob, ci = 0.95)
CI(loss$goalprob, ci = 0.95)
t.test(wins$goalprob)
t.test(wins$goalprob, loss$goalprob)
save.image("~/OneDrive/Documents/Work/Teaching/2018/Applied Data Analysis in Sport/Assessment/Activity 2/2018-Sem2/Activity 2 Workspace.RData")
View(home)
## Q28 ##
CI(home$goalprob, ci = 0.95)
## Q29 ##
CI(away$goalprob, ci = 0.95)
library(readr)
shots <- read_csv("OneDrive/Documents/Work/Teaching/2018/Applied Data Analysis in Sport/Assessment/Activity 1/Activity 1 Data.csv")
View(shots)
table(shots$Play_Type, shots$Outcome)
24+3+57+3
3/87
3/36
library(dplyr)
shots <- mutate(shots, Outcome1 = ifelse(Outcome = "Goal", 1, 0))
shots <- mutate(shots, Outcome1 = ifelse(Outcome == "Goal", 1, 0))
table(shots$Outcome1)
table(shots$Outcome)
shots$Outcome1 <- as.factor(shots$Outcome1)
levels(shots$Outcome1)
model <- glm(Outcome1 ~ Distance_to_Goal, family = binomial, data = shots)
goalprobs = predict(model)
shots <- data.frame(shots, goalprobs)
View(shots)
goalprobs = predict(model, type = "response")
shots <- data.frame(shots, goalprobs)
with(shots, plot(Distance_to_Goal, goalprobs.1))
hist(shots$goalprobs.1)
with(shots, table(Attacking_Team, Outcome))
with(shots, table(Assist, Outcome))
hist(shots$Distance_to_Goal[shots$Assist == "Cross"])
with(shots, boxplot(Distance_to_Goal ~ Attacking_Team))
with(shots, boxplot(Distance_to_Goal ~ Attacking_Team))
with(shots, boxplot(Distance_to_Goal ~ Outcome!))
with(shots, boxplot(Distance_to_Goal ~ Outcome1))
table(shots$Attacking_Team)
melbournes <- shots[shots$Attacking_Team == "Melbourne Victory" | shots$Attacking_Team == "Melbourne City",]
with(melbournes, boxplot(Distance_to_Goal ~ Attacking_Team))
table(shots$Assist)
?mapvalues
library(plyr)
?mapvalues
mapvalues(shots$Assist, from = c("Medium pass", "Short pass"), to = c("Medium Pass", "Short Pass"))
shots$Assist <- mapvalues(shots$Assist, from = c("Medium pass", "Short pass"), to = c("Medium Pass", "Short Pass"))
table(shots$Assist)
table(shots$Assist, shots$Outcome1)
tb <- table(shots$Assist, shots$Outcome1)
tb
tb <- as.data.frame(tb)
tb
tb <- table(shots$Assist, shots$Outcome1)
tb
23/118
3/16
3/51
tbl_df(tb)
tb
prop.table(tb)
tb$0
tb <- as.data.frame(tb)
tb
nogoals <- tb[tb$Var2 == "0",]
goals <- tb[tb$Var2 == "1",]
nogoals
goals
p <- nogoals[,-2]
p
names(nogoals) <- c("Assist", "nogoal")
p <- cbind(p, goals)
p
p <- p[,c(-3,-4)]
p
names(p) <- c("Assist", "nogoal", "goal")
p
library(dplyr)
p <- mutate(p, goalprob = goal/(goal + nogoal))
p
max(shots$goalprobs.1)
3/87
with(shots, table(Assist, Outcome))
library(readxl)
rugby <- read_excel("OneDrive/Documents/Work/Research/Brumbies/Try Source Data.xlsx",
sheet = "Reliability Data")
View(rugby)
str(rugby)
is.character(rugby[,1])
!is.character(rugby[,1])
if (is.character(rugby[,2])) {rugby[,2] <- as.factor(rugby[,2])}
str(rugby)
rugby[,2] <- as.factor(rugby[,2])
if (is.character(names(rugby)) {list(names(rugby))}
if (is.character(names(rugby))) {list(names(rugby))}
which(is.character(names(rugby))
)
is.character(names(rugby))
for (i in 1:ncol(rugby)) {
is.character(rugby[,i])
}
i
is.character(rugby[,2])
for (i in 1:ncol(rugby)) {
characters <- is.character(rugby[,i])
}
for (i in 1:ncol(rugby)) {
characters[i] <- is.character(rugby[,i])
}
print(characters)
for (i in 1:26) {
characters[i] <- is.character(rugby[,i])
}
print(characters)
class(rugby[,2])
class(rugby$round_no2)
str(rugby)
st <- str(rugby)
st
rugby[[1]]
is.character[[1]]
is.character(rugby[[1]])
is.character(rugby[[2]])
for (i in 1:ncol(rugby)) {
characters[i] <- is.character(rugby[[i]])
}
print(characters)
which(characters)
rm(i)
for (i in characters) {
rugby[[i]] <- as.factor(rugby[[i]])
}
ch <- which(characters)
ch
names(rugby)[ch]
cols <- names(rugby)[ch]
class(cols)
as.vector(cols)
cols <- as.vector(cols)
class(cols)
rugby[cols] <- lappy(rugby[cols], factor)
rugby[cols] <- lapply(rugby[cols], factor)
str(rugby)
install.packages("irr")
library(irr)
kappa2(rugby[,c(2,15)])
table(rugby[,c(2,15)])
identical(rugby$attacking_team2, rugby$attacking_team1)
?identical
rugby$attacking_team2
rugby$attacking_team1
which(rugby$attacking_team1 != rugby$attacking_team2)
library(irr)
for (i in ch) {print(i)}
identical(rugby$round_no2, rugby$round_no1)
for (i in ch) {kappa(rugby[,c(i,i+13)])}
kappa(rugby[,c(2,2+13)])
for (i in c(2,3,4,5,6,7,10)) {kappa(rugby[,c(i,i+13)])}
kappa2(rugby[,c(2,15)])
which(characters)
characters
names(rugby)
kappa2(rugby[,c(2,15)])   ## attacking team ##
kappa2(rugby[,c(3,16)])   ## defending team ##
kappa2(rugby[,c(5,18)])   ## try source ##
kappa2(rugby[,c(6,19)])   ## secondary source ##
kappa2(rugby[,c(7,20)])   ## final source ##
kappa2(rugby[,c(10,23)])  ## possession zone ##
k <- kappa2(rugby[,c(2,15)])
k$statistic
k$value
kappa2(rugby[,c(2,15)])$value   ## attacking team ##
mean(kappa2(rugby[,c(2,15)])$value,   ## attacking team ##
kappa2(rugby[,c(3,16)])$value,   ## defending team ##
kappa2(rugby[,c(5,18)])$value,   ## try source ##
kappa2(rugby[,c(6,19)])$value,   ## secondary source ##
kappa2(rugby[,c(7,20)])$value,   ## final source ##
kappa2(rugby[,c(10,23)])$value)  ## possession zone ##
kappa2(rugby[,c(2,15)])$value   ## attacking team ##
sum(kappa2(rugby[,c(2,15)])$value,   ## attacking team ##
kappa2(rugby[,c(3,16)])$value,   ## defending team ##
kappa2(rugby[,c(5,18)])$value,   ## try source ##
kappa2(rugby[,c(6,19)])$value,   ## secondary source ##
kappa2(rugby[,c(7,20)])$value,   ## final source ##
kappa2(rugby[,c(10,23)])$value)/6
names(rugby)
icc(rugby[,c(4,17)])
icc(rugby[,c(4,17)], type = "agreement")
icc(rugby[,c(8,21)], type = "agreement")
icc(rugby[,c(9,22)], type = "agreement")
icc(rugby[,c(13,26)], type = "agreement")  ## total_passes ##
icc(rugby[,c(12,25)], type = "agreement")  ## passes ##
icc(rugby[,c(11,24)], type = "agreement")  ## offloads ##
icc(rugby[,c(9,22)], type = "agreement")   ## time_from_source ##
rugby_reliability <- rugby
rm(rugby)
library(readxl)
rugby <- read_excel("OneDrive/Documents/Work/Research/Brumbies/Try Source Data.xlsx")
View(rugby)
str(rugby)
for (i in 1:ncol(rugby)) {
characters[i] <- is.character(rugby[[i]])
}
ch <- which(characters)
cols <- names(rugby)[ch]
rugby[cols] <- lapply(rugby[cols], factor)
for (i in 1:ncol(rugby)) {
characters[i] <- is.character(rugby[[i]])
}
characters <- vector()
for (i in 1:ncol(rugby)) {
characters[i] <- is.character(rugby[[i]])
}
ch <- which(characters)
cols <- names(rugby)[ch]
rugby[cols] <- lapply(rugby[cols], factor)
str(rugby)
rugby$round_no <- as.factor(rugby$round_no)
str(rugyb)
str(rugby)
which(is.na(rugby), arr.ind = TRUE)
table(rugby$attacking_team)
length(table(rugby$attacking_team))
table(try_source)
table(rugby$try_source)
length(table(rugby$try_source))
save.image("~/OneDrive/Documents/Work/Research/Brumbies/workspace.RData")
library(readxl)
nba <- read_excel("OneDrive/Documents/Work/Teaching/2018/Sport Informatics and Analytics/Assessment/Activity 1/2018-Sem2/Activity 1 Data.xlsx")
View(nba)
names(nba[11:14]) <- c("x2P", "x2PA", "x3P", "x3PA")
View(nba)
names(nba)
names(nba[c(11:14)]) <- c("x2P", "x2PA", "x3P", "x3PA")
names(nba)
names(nba[11]) <- "x2P"
View(nba)
library(readxl)
nba <- read_excel("OneDrive/Documents/Work/Teaching/2018/Sport Informatics and Analytics/Assessment/Activity 1/2018-Sem2/Activity 1 Data.xlsx")
View(nba)
library(dplyr)
names(nba[3])
class(names(nba[3]))
library(readxl)
nba <- read_excel("OneDrive/Documents/Work/Teaching/2018/Sport Informatics and Analytics/Assessment/Activity 1/2018-Sem2/Activity 1 Data.xlsx")
View(nba)
nba_z <- scale(nba[,7:28])
View(nba_z)
nba_dist <- dist(nba_z, method = "euclidean")
nba_hclust <- hclust(nba_dist, method = "ward.D2")
plot(nba_hclust)
rect.hclust(nba_hclust, k = 6, border = "blue")
nba_hclust
hgroups_6 <- cutree(nba_hclust, k = 6)
table(hgroups_6)
hgroups_5 <- cutree(nba_hclust, k = 5)
table(hgroups_5)
plot(nba_hclust)
rect.hclust(nba_hclust, k = 3, border = "blue")
library(readxl)
nba <- read_excel("OneDrive/Documents/Work/Teaching/2018/Sport Informatics and Analytics/Assessment/Activity 1/2018-Sem2/Activity 1 Data.xlsx")
View(nba)
nba[is.na(nba)] <- 0
sum(is.na(nba))
nba_z <- scale(nba[,7:28])
nba_dist <- dist(nba_z, method = "euclidean")
nba_hclust <- hclust(nba_dist, method = "ward.D2")
plot(nba_hclust)
rect.hclust(nba_hclust, h = 30)
plot(nba_hclust)
rect.hclust(nba_hclust, k = 3, border = "blue")
hgroups_3 <- cutree(nba_hclust, k = 3)
table(hgroups_3)
nba <- cbind(nba, hgroups_3)
aggregate(nba[,7:nrow(nba)], by = list(hgroups_3), FUN = median)
aggregate(nba[,7:ncol(nba)], by = list(hgroups_3), FUN = median)
aggregate(nba[,7:ncol(nba)], by = list(hgroups_3), FUN = median)
nba <- nba[,c(9,11,17:21)]
nba_z <- scale(nba)
head(nba)
dist(nba_z, method = "euclidean")
hdist <- dist(nba_z, method = "euclidean")
hcluster <- hclust(hdist)
hcluster <- hclust(hdist, method = "ward.D2")
plot(hcluster)
hgroups_3 <- cutree(hcluster, k = 3)
nba <- cbind(nba, groups_3)
nba <- cbind(nba, hgroups_3)
table(hgroups_3)
aggregate(nba[,1:7], by = list(hgroups_3), FUN = median)
library(readxl)
nba <- read_excel("OneDrive/Documents/Work/Teaching/2018/Sport Informatics and Analytics/Assessment/Activity 1/2018-Sem2/Activity 1 Data.xlsx")
View(nba)
save.image("~/OneDrive/Documents/Work/Teaching/2018/Sport Informatics and Analytics/Assessment/Activity 1/2018-Sem2/Activity 1 Workspace.RData")
View(nba)
nba_z <- scale(nba[,6:11])
View(nba_z)
hdist <- dist(nba_z, method = "euclidean")
hcluster <- hclust(hdist, method = "ward.D2")
plot(hcluster)
rect.hclust(hcluster, k = 3, border = "blue")
hgroups_3 <- cutree(hcluster, k = 3)
table(hgroups_3)
aggregate(nba[,6:11], by = list(hgroups_3), FUN = median)
aggregate(nba[,6:11], by = list(hgroups_3), FUN = mean)
aggregate(nba[,6:11], by = list(hgroups_3), FUN = max)
library(ggplot2)
ggplot(nba, aes(x = x2P, y = x3P, col = as.factor(hgroups_3)) + geom_point()
)
ggplot(nba, aes(x = x2P, y = x3P, col = as.factor(hgroups_3))) + geom_point()
ggplot(nba, aes(x = x2P, y = TRB, col = as.factor(hgroups_3))) + geom_point()
ggplot(nba, aes(x = x2P, y = AST, col = as.factor(hgroups_3))) + geom_point()
ggplot(nba, aes(x = x2P, y = STL, col = as.factor(hgroups_3))) + geom_point()
ggplot(nba, aes(x = x2P, y = BLK, col = as.factor(hgroups_3))) + geom_point()
save.image("~/OneDrive/Documents/Work/Teaching/2018/Sport Informatics and Analytics/Assessment/Activity 1/2018-Sem2/Activity 1 Workspace.RData")
aggregate(nba[,6:11], by = list(hgroups_3), FUN = median)
table(nba$team, hgroups_3)
wss <- 0
for (i in 1:15) {km.out <- kmeans(nba_z, centers = i)
wss[i] <- km.out$tot.withinss
}
plot(x = 1:15, y = wss, type = "b")
kmeans3 <- kmeans(nba_z, centers = 3)
kgroups_3 <- kmeans3$cluster
table(kgroups_3)
table(hgroups_3)
aggregate(nba[,6:11], by = list(kgroups_3), FUN = median)
aggregate(nba[,6:11], by = list(hgroups_3), FUN = median)
install.packages("SportsAnalytics")
library(SportsAnalytics)
soccer <- data("EURO4PlayerSkillsSep11")
View(EURO4PlayerSkillsSep11)
soccer <- EURO4PlayerSkillsSep11
View(soccer)
with(soccer, plot(ShotAccuracy, ShotPower))
which(is.na(soccer), arr.ind = TRUE)
soccer[soccerAccuracy == 0,]
soccer[soccer$ShotAccuracy == 0,]
soccer <- soccer[-1166,]
soccer[soccer$ShotAccuracy == 0,]
with(soccer, plot(ShotAccuracy, ShotPower))
View(soccer)
soccer_z <- scale(soccer[,29:31])
View(soccer_z)
wss <- 0
for (i in 1:15) {km.out <- kmeans(soccer_z, centers = i)
wss[i] <- km.out$tot.withinss
}
plot(x = 1:15, y = wss, type = "b")
k4 <- kmeans(soccer_z, centers = 4)
kmeans4 <- kmeans(soccer_z, centers = 4)
kgroups_4 <- kmeans4$cluster
table(kgroups_4)
aggregate(soccer[,29:31], by = list(kgroups_4), FUN = median)
kmeans3 <- kmeans(soccer_z, centers = 3)
kgroups_3 <- kmeans3$cluster
table(kgroups_3)
aggregate(soccer[,29:31], by = list(kgroups_3), FUN = median)
ggplot(soccer, aes(x = ShotPower, y = ShotAccuracy, col = as.factor(kgroups_3))) + geom_point()
library(ggplot2)
ggplot(soccer, aes(x = ShotPower, y = ShotAccuracy, col = as.factor(kgroups_3))) + geom_point()
ggplot(soccer, aes(x = ShotPower, y = ShotTechnique, col = as.factor(kgroups_3))) + geom_point()
ggplot(soccer, aes(x = ShotTechnique, y = ShotAccuracy, col = as.factor(kgroups_3))) + geom_point()
with(soccer(table(Position, kgroups_3)))
with(soccer,table(Position, kgroups_3))
soccer2 <- soccer[soccer$Position != "Goalkeeper", ]
table(soccer$Position)
table(soccer2$Position)
soccer2_z <- scale(soccer2[,29:31])
soccer2_z <- scale(soccer2[,29:31])
wss <- 0
for (i in 1:15) {km.out <- kmeans(soccer2_z, centers = i)
wss[i] <- km.out$tot.withinss
}
plot(x = 1:15, y = wss, type = "b")
kmeans3 <- kmeans(soccer2_z, centers = 3)
kgroups_3 <- kmeans3$cluster
table(kgroups_3)
aggregate(soccer2[,29:31], by = list(kgroups_3), FUN = median)
ggplot(soccer2, aes(x = ShotPower, y = ShotAccuracy, col = as.factor(kgroups_3))) + geom_point()
ggplot(soccer2, aes(x = ShotPower, y = ShotTechnique, col = as.factor(kgroups_3))) + geom_point()
ggplot(soccer2, aes(x = ShotTechnique, y = ShotAccuracy, col = as.factor(kgroups_3))) + geom_point()
table(kgroups_4)
aggregate(soccer2[,29:31], by = list(kgroups_4), FUN = median)
kmeans4 <- kmeans(soccer2_z, centers = 4)
kgroups_4 <- kmeans4$cluster
table(kgroups_4)
aggregate(soccer2[,29:31], by = list(kgroups_4), FUN = median)
ggplot(soccer2, aes(x = ShotPower, y = ShotAccuracy, col = as.factor(kgroups_4))) + geom_point()
ggplot(soccer2, aes(x = ShotPower, y = ShotTechnique, col = as.factor(kgroups_4))) + geom_point()
with(soccer2,table(Position, kgroups_3))
with(soccer,table(Position, kgroups_4))
with(soccer2,table(Position, kgroups_4))
setwd("~/OneDrive/Documents/Work/Teaching/2018/Sport Informatics and Analytics/Assessment/Activity 1/2018-Sem2/SIA-Activity1")
write.csv(nba, "nba_players.csv")
write.csv(soccer, "soccer_players.csv")
rect.hclust(hcluster, k = 3, border = "blue")
hdist <- dist(nba_z, method = "euclidean")
hcluster <- hclust(hdist, method = "ward.D2")
plot(hcluster)
rect.hclust(hcluster, k = 3, border = "blue")
hgroups_3 <- cutree(hcluster, k = 3)
table(hgroups_3)
hgroups_3 <- cutree(hcluster, k = 3)
table(hgroups_3)
aggregate(nba[,6:11], by = list(hgroups_3), FUN = median)
table(nba$team, hgroups_3)
wss <- 0
for (i in 1:15) {km.out <- kmeans(soccer_z, centers = i)
wss[i] <- km.out$tot.withinss
}
plot(x = 1:15, y = wss, type = "b")
kmeans3 <- kmeans(soccer_z, centers = 3)
kgroups_3 <- kmeans3$cluster
table(kgroups_3)
aggregate(soccer[,29:31], by = list(kgroups_3), FUN = median)
with(soccer,table(Position, kgroups_3))
soccer2 <- soccer[soccer$Position != "Goalkeeper", ]
soccer2_z <- scale(soccer2[,29:31])
wss <- 0
for (i in 1:15) {km.out <- kmeans(soccer2_z, centers = i)
wss[i] <- km.out$tot.withinss
}
plot(x = 1:15, y = wss, type = "b")
kmeans3 <- kmeans(soccer2_z, centers = 3)
kgroups_3 <- kmeans3$cluster
table(kgroups_3)
aggregate(soccer2[,29:31], by = list(kgroups_3), FUN = median)
with(soccer2,table(Position, kgroups_3))
save.image("~/OneDrive/Documents/Work/Teaching/2018/Sport Informatics and Analytics/Assessment/Activity 1/2018-Sem2/Activity 1 Workspace.RData")
